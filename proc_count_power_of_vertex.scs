scp_program -> proc_count_power_of_vertex
(* -> rrel_params: ..proc_count_power_of_vertex_params
    (*
        -> rrel_1: rrel_in: _set_of_vertexes;;
        -> rrel_2: rrel_in: _vertex_counter;;
        -> rrel_3: rrel_in: _graph;;
    *);;
    -> rrel_operators: ..proc_count_power_of_vertex_operators
    (*
        -> rrel_init: ..pow_oper_1 (*
            <- searchElStr3 ;;

            -> rrel_1 : rrel_fixed : rrel_scp_var : rrel_node : _set_of_vertexes ;;
            -> rrel_2 : rrel_assign : rrel_scp_var : rrel_pos_const_perm : _connector ;;
            -> rrel_3 : rrel_assign : rrel_scp_var : rrel_node : _vertex ;;

            => nrel_then : ..pow_oper_2 ;;
            => nrel_else : ..pow_oper_return ;;
        *);;
        -> ..pow_oper_2 (*

            <- call;;

            -> rrel_1: rrel_fixed: rrel_scp_const: proc_count_power_the_only_one_vertex;;
            -> rrel_2: rrel_fixed: rrel_scp_const: ... (*
                -> rrel_1: rrel_fixed: rrel_scp_var: _vertex;;
                -> rrel_2: rrel_fixed: rrel_scp_var: _vertex_counter;;
                -> rrel_3: rrel_fixed: rrel_scp_var: _graph;;
            *);;
            -> rrel_3: rrel_assign: rrel_scp_var: _waiting;;

            => nrel_goto : ..pow_oper_3 ;;
        *);;
        -> ..pow_oper_3 (*
            <- waitReturn;;

            -> rrel_1: rrel_fixed: rrel_scp_var: _waiting;;

            => nrel_goto: ..pow_oper_4;;
        *);;
        -> ..pow_oper_4 (*
            <- eraseEl ;;

            -> rrel_1 : rrel_fixed : rrel_scp_var : rrel_pos_const_perm : rrel_erase : _connector ;;

            => nrel_goto : ..pow_oper_1 ;;
        *);;
        -> ..pow_oper_return (*
            <- return;;
        *);;
    *);;
*);;